{"version":3,"sources":["components/NoteText/NoteText.module.css","components/BoxItem/BoxItem.module.css","components/ContentSelector/ContentSelector.module.css","components/ThreeDotsMenu/ThreeDotsMenu.module.css","components/NewBoxPopUp/NewBoxPopUp.module.css","components/AddText/addText.module.css","components/AddBox/AddBox.module.css","components/WelcomeHeader/WelcomeHeader.module.css","components/DeleteBoxPopUp/DeleteBoxPopUp.module.css","components/StorageBoxesContainer/StorageBoxesContainer.module.css","components/RenderDemo/RenderDemo.module.css","components/BoxTitle/BoxTitle.module.css","components/WelcomeHeader/index.js","utils/dbFunctions.js","utils/localStorageFunct.js","components/NewBoxPopUp/index.js","components/AddText/index.js","components/ContentSelector/index.js","components/NoteText/index.js","components/DeleteBoxPopUp/index.js","components/ThreeDotsMenu/index.js","components/BoxTitle/index.js","components/BoxItem/index.js","components/AddBox/index.js","components/RenderDemo/index.js","components/StorageBoxesContainer/index.js","pages/Home/index.js","App.js","index.js"],"names":["module","exports","WelcomeHeader","className","CSS","container","text","returnUniqueNum","arrayOfIds","range","length","sort","a","b","i","startNum","error","getLocal","JSON","parse","localStorage","getItem","setLocal","parsedArray","setItem","stringify","storageFunct","initDemo","information","getAllStorage","removeAllStorage","removeItem","addBox","title","StorageBoxes","boxId","notes","newBox","map","box","push","delBox","updatedStorageBoxes","filter","addNote","type","id","noteIds","note","noteId","delNote","updatedArray","updatedNotes","updateNote","NewBoxPopUp","onExitPopUp","onCreate","useState","setTitle","screen","popupExit","onClick","onChange","e","event","value","target","handledChange","placeholder","createBtn","AddText","onSave","textAreaRef","closeBtn","useRef","useEffect","current","heading","ref","contentEditable","suppressContentEditableWarning","innerText","textContent","btn","ContentSelector","textareaActive","setTextareaActive","onSelected","setOnSelected","header","addText","btnActive","addHeader","btnContainer","onMouseDown","Editor","React","forwardRef","onClose","onDel","editorState","setEditorState","textState","setTextState","textareaRef","NoteTextCSS","editingTextarea","editingHeading","buildEditorTxt","innerHtmlFormatter","htmlString","StrArr","replaceAll","split","join","pop","elementLayout","element","close","innerHTML","window","confirm","save","edited","del","Text","pTag","pTagContainer","Title","Heading","NoteText","updateTitle","isEditingState","setIsEditingState","editorClass","noteRef","getCompHeight","noteChecker","handleClick","undefined","hidden","updatedText","DeleteBoxPopUp","stopPropagation","DelPopUpCSS","item","ThreeDotsMenu","isOpen","setIsOpen","ThreeDotsCSS","dot1","dots","dot2","dot3","BoxTitle","props","children","BoxItem","content","deleteBox","BoxItemCSS","storageBox","classList","setClassList","boxState","setBoxState","deleteNote","deleteId","newContentArray","state","titleRef","storageBoxOpen","onMouseEnter","titleHover","onMouseLeave","closeBoxBtn","contentType","newTitle","prevState","contentContainer","noteTextBuilder","newNote","newId","AddBox","plus","verticalLine","horizontalLine","RenderDemo","StorageBoxesContainer","boxesState","setBoxesState","boxesComponentState","setBoxesComponentState","renderAddNewPopUp","setRenderAddNewPopUp","setStorageBoxes","getComponents","ReactComponents","handleBoxDelete","handleExitPopUp","array","delBoxId","updatedBoxes","location","reload","StorageBoxesContainerCSS","Home","App","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,gBAAkB,kCAAkC,eAAiB,iCAAiC,aAAe,+BAA+B,IAAM,sBAAsB,SAAW,2BAA2B,IAAM,sBAAsB,KAAO,uBAAuB,MAAQ,wBAAwB,cAAgB,gCAAgC,KAAO,uBAAuB,WAAa,6BAA6B,OAAS,2B,kBCA3eD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,eAAiB,gCAAgC,iBAAmB,kCAAkC,MAAQ,uBAAuB,WAAa,4BAA4B,YAAc,+B,gBCAvPD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,aAAe,sCAAsC,IAAM,6BAA6B,UAAY,qC,iBCArKD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,KAAO,4BAA4B,KAAO,4BAA4B,KAAO,4BAA4B,KAAO,8B,mBCA/KD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,UAAY,+BAA+B,UAAY,+BAA+B,UAAY,iC,gBCAzJD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,IAAM,qBAAqB,KAAO,sBAAsB,QAAU,2B,gBCA3HD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,aAAe,6BAA6B,eAAiB,iC,2zDCArID,EAAOC,QAAU,CAAC,UAAY,iCAAiC,SAAW,gCAAgC,KAAO,8B,gBCAjHD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,KAAO,+B,oBCAvED,EAAOC,QAAU,CAAC,UAAY,yCAAyC,IAAM,qC,gBCA7ED,EAAOC,QAAU,CAAC,IAAM,0B,2CCAxBD,EAAOC,QAAU,CAAC,MAAQ,0B,gICEX,SAASC,IACtB,OACE,qBAAKC,UAAWC,IAAIC,UAApB,SACE,oBAAIF,UAAWC,IAAIE,KAAnB,0B,oCCNC,SAASC,EAAgBC,GAE9B,IAAIC,EAAQD,EAAWE,OACvB,GAAc,IAAVD,EACF,OAAO,EAGTD,EAAWG,MAAK,SAAUC,EAAGC,GAC3B,OAAOD,EAAIC,KAGb,IACE,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAOK,IAAK,CAE9B,IAAMC,EAAWP,EAAWM,GAAK,EACjC,GAAsB,IAAlBN,EAAW,GACb,OAAO,EAIT,GAAIO,IADYP,EAAWM,EAAI,GAE7B,OAAOC,GAGX,MAAOC,K,YClBLC,EAAW,WACf,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,kBAEnCC,EAAW,SAACC,GAChBH,aAAaI,QAAQ,eAAgBN,KAAKO,UAAUF,KA4IvCG,EAnIM,CACnBC,SAAU,WACRL,EAASM,IAEXC,cAAe,WACb,OAAOX,KAAKC,MAAMC,aAAaC,QAAQ,kBAEzCS,iBAAkB,WAChBV,aAAaW,WAAW,iBAE1BC,OAAQ,SAAUC,GAEhB,IAAMC,EAAejB,IAIrB,GAAqB,OAAjBiB,EAAuB,CAGzBZ,EADiB,CAAC,CAAEa,MADN,EACoBF,MAAOA,EAAOG,MAAO,UAGlD,CAEL,IAGMC,EAAS,CAAEF,MAFH5B,EA9BGU,IACDqB,KAAI,SAACC,GACvB,OAAOA,EAAIJ,UA8BsBF,MAAOA,EAAOG,MAAO,IAEpDF,EAAaM,KAAKH,GAElBf,EAASY,KAIbO,OAAQ,SAAUN,GAChB,IAEMO,EAFezB,IAEoB0B,QAAO,SAACJ,GAC/C,OAAIA,EAAIJ,QAAUA,OAChB,EAEOI,KAIX,OADAjB,EAASoB,GACFA,GAGTE,QAAS,SAAUC,EAAMvC,EAAM6B,GAE7B,IAAIW,EAAK,EASHJ,EAHezB,IAGoBqB,KAAI,SAACC,GAC5C,GAAIJ,IAAUI,EAAIJ,MAAO,CAEvB,IAAMY,EAAUR,EAAIH,MAAME,KAAI,SAACU,GAC7B,OAAOA,EAAKC,UAId,OAFAH,EAAKvC,EAAgBwC,GACrBR,EAAIH,MAAMI,KAAK,CAAES,OAAQH,EAAID,KAAMA,EAAMvC,KAAMA,IACxCiC,EAEP,OAAOA,KAKX,OAFAjB,EAASoB,GAEFI,GAETI,QAAS,SAAUf,EAAOc,GACxB,IAGME,EAHejC,KAAKC,MAAMC,aAAaC,QAAQ,iBAGnBiB,KAAI,SAACC,GAGrC,GAAIA,EAAIJ,QAAUA,EAAO,CAEvB,IAAMiB,EAAeb,EAAIH,MAAMO,QAAO,SAACK,GACrC,OAAIA,EAAKC,SAAWA,OAClB,EAEOD,KAGXT,EAAIH,MAAQgB,EAGd,OAAOb,KAGTjB,EAAS6B,IAEXE,WAAY,SAAUlB,EAAOc,EAAQ3C,EAAMuC,GACzC,IAEMM,EAFelC,IAEaqB,KAAI,SAACC,GAErC,GAAIJ,IAAUI,EAAIJ,MAAO,CAEvB,GAAa,UAATU,EAIF,OAFAN,EAAIN,MAAQ3B,EAELiC,EAEP,IAAMa,EAAeb,EAAIH,MAAME,KAAI,SAACU,GAClC,OAAIA,EAAKC,SAAWA,GAClBD,EAAK1C,KAAOA,EACL0C,GAEAA,KAGXT,EAAIH,MAAQgB,EAIhB,OAAOb,KAETjB,EAAS6B,KC9IE,SAASG,EAAT,GAAiD,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SACjD,EAA0BC,mBAAS,IAAnC,mBAAOxB,EAAP,KAAcyB,EAAd,KAaA,OACE,qBAAKvD,UAAWC,IAAIuD,OAApB,SACE,sBAAKxD,UAAWC,IAAIC,UAApB,UACE,wBAAQF,UAAWC,IAAIwD,UAAWC,QAASN,EAA3C,eAGA,uBACEO,SAAU,SAACC,IAlBG,SAACC,GACrB,IACMC,EADSD,EAAME,OACAD,MACrBP,EAASO,GAgBDE,CAAcJ,IAEhBK,YAAY,UAEd,wBACEjE,UAAWC,IAAIiE,UACfR,QAnBQ,WACdnC,EAAaM,OAAOC,GACpBuB,KAeI,SAIE,sD,sGC5BK,SAASc,EAAT,GAAiD,EAA9BxB,GAA+B,IAA3ByB,EAA0B,EAA1BA,OAAQ1B,EAAkB,EAAlBA,KACtC2B,GADwD,EAAZC,SAC9BC,oBAEpBC,qBAAU,WAER,OAAQ9B,GACN,IAAK,OACH2B,EAAYI,QAAQzE,UAAYC,IAAIE,KACpC,MACF,IAAK,UACHkE,EAAYI,QAAQzE,UAAYC,IAAIyE,WAGvC,IASH,OACE,sBAAK1E,UAAWC,IAAIC,UAApB,UACE,qBACEyE,IAAKN,EACLO,iBAAiB,EACjBC,gCAAgC,IAElC,wBAAQnB,QAXQ,WAClBU,EAAO,CAAE1B,KAAMA,EAAMvC,KAAMkE,EAAYI,QAAQK,YAC/CT,EAAYI,QAAQM,YAAc,IASF/E,UAAWC,IAAI+E,IAA7C,qBC/BS,SAASC,EAAT,GAA2C,IAAhB7C,EAAe,EAAfA,IAAKgC,EAAU,EAAVA,OAC7C,EAA4Cd,oBAAS,GAArD,mBAAO4B,EAAP,KAAuBC,EAAvB,KACA,EAAoC7B,mBAAS,QAA7C,mBAAO8B,EAAP,KAAmBC,EAAnB,KACMC,EAASf,mBACTpE,EAAOoE,mBAEPgB,EAAO,uCAAG,sBAAA9E,EAAA,6DACdN,EAAKsE,QAAQzE,UAAYC,IAAIuF,UAC7BF,EAAOb,QAAQzE,UAAYC,IAAI+E,IAC/BK,EAAc,QAHA,SAIRF,GAAkB,GAJV,uBAKRA,GAAkB,GALV,2CAAH,qDAQPM,EAAS,uCAAG,sBAAAhF,EAAA,6DAChB6E,EAAOb,QAAQzE,UAAYC,IAAIuF,UAC/BrF,EAAKsE,QAAQzE,UAAYC,IAAI+E,IAC7BK,EAAc,WAHE,SAIVF,GAAkB,GAJR,uBAKVA,GAAkB,GALR,2CAAH,qDAef,OACE,sBAAKnF,UAAWC,IAAIC,UAApB,UACE,sBAAKF,UAAWC,IAAIyF,aAApB,UACE,mBAAGf,IAAKW,EAAQK,YAAaF,EAAWzF,UAAWC,IAAI+E,IAAvD,oBAGA,mBAAGL,IAAKxE,EAAMwF,YAAaJ,EAASvF,UAAWC,IAAI+E,IAAnD,kBAGA,mBAAGW,YAhBM,WACbxF,EAAKsE,QAAQzE,UAAYC,IAAI+E,IAC7BM,EAAOb,QAAQzE,UAAYC,IAAI+E,IAC/BG,GAAkB,IAaUnF,UAAWC,IAAI+E,IAAvC,uBAIDE,GACC,cAACf,EAAD,CAASnC,MAAOI,EAAKM,KAAM0C,EAAYhB,OAAQA,O,oBCtCjDwB,EAASC,IAAMC,YACnB,WAAyCnB,GAAS,IAA/CxE,EAA8C,EAA9CA,KAAMuC,EAAwC,EAAxCA,KAAMqD,EAAkC,EAAlCA,QAAS3B,EAAyB,EAAzBA,OAAQ4B,EAAiB,EAAjBA,MAC9B,EAAsC1C,qBAAtC,mBAAO2C,EAAP,KAAoBC,EAApB,KACA,EAAkC5C,mBAASnD,GAA3C,mBAAOgG,EAAP,KAAkBC,EAAlB,KACMC,EAAc9B,mBACpBC,qBAAU,WACR,OAAQ9B,GACN,IAAK,OACH2D,EAAY5B,QAAQzE,UAAYsG,IAAYC,gBAC5C,MACF,IAAK,UAGL,IAAK,QACHF,EAAY5B,QAAQzE,UAAYsG,IAAYE,eAGhDC,MACC,IACH,IAAMC,EAAqB,SAACC,GAE1B,IAkBMC,EAlBQD,EAAWE,WAAW,QAAS,IACpBA,WAAW,SAAU,IACvBA,WAAW,MAAO,IACpBA,WAAW,OAAQ,IACnBA,WAAW,MAAO,IAClBA,WAAW,OAAQ,IACnBA,WAAW,MAAO,IAClBA,WAAW,OAAQ,IACnBA,WAAW,MAAO,IACfC,MAAM,aACCC,KAAK,IACLF,WAAW,UAAW,IACxBA,WAAW,OAAQ,MACnBA,WAAW,SAAU,KACpBA,WAAW,QAAS,KACvBA,WAAW,OAAQ,KACpBA,WAAW,OAAQ,KACnBA,WAAW,OAAQ,MACrBC,MAAM,QAM9B,OAJAF,EAAOI,MACPJ,EAAOI,MAEUJ,EAAOG,KAAK,KAKzBN,EAAiB,WACrB,IACMQ,EADMd,EAAUW,MAAM,MACA3E,KAAI,SAAC+E,EAASvG,GACxC,MAAgB,KAAZuG,EACK,sBAASvG,GAKX,4BAAYuG,GAAJvG,MAIjBuF,EAAe,8BAAMe,MAEvB,OACE,qBAAKjH,UAAWsG,IAAYpG,UAA5B,SACE,sBAAKyE,IAAKA,EAAV,UACE,wCACA,qBACEA,IAAK0B,EACLzB,iBAAiB,EACjBC,gCAAgC,EAHlC,SAKGoB,IAEH,uBACA,sBAAKjG,UAAWsG,IAAYZ,aAA5B,UACE,wBACE1F,UAAS,UAAKsG,IAAYtB,IAAjB,YAAwBsB,IAAYa,OAC7CxB,YAAa,SAAC/B,GACG8C,EACbL,EAAY5B,QAAQ2C,aAEPjB,EAEAkB,OAAOC,QAClB,kDAIAvB,IAGFA,KAhBN,0BAsBA,wBACE/F,UAAS,UAAKsG,IAAYtB,IAAjB,YAAwBsB,IAAYiB,MAC7C5B,YAAa,SAAC/B,GACZ,IAAM4D,EAASd,EACbL,EAAY5B,QAAQ2C,WAEtBhB,EAAaoB,GACbpD,EAAOoD,IAPX,kBAYU,UAAT9E,GACC,wBACEgB,QAAS,WACPsC,KAEFhG,UAAS,UAAKsG,IAAYtB,IAAjB,YAAwBsB,IAAYmB,KAJ/C,+BAgBRC,EAAO7B,IAAMC,YAAW,WAAWnB,GAAS,IAAjBxE,EAAgB,EAAhBA,KAuB/B,OAAO,mCArBM,WACX,IACM8G,EADM9G,EAAK2G,MAAM,MACK3E,KAAI,SAAC+E,EAASvG,GACxC,MAAgB,KAAZuG,EACK,sBAASvG,GAGhB,mBAAGX,UAAWsG,IAAYqB,KAA1B,SACGT,GADkCvG,MAMzC,OACE,qBAAKgE,IAAKA,EAAK3E,UAAWsG,IAAYsB,cAAtC,SACGX,IAMGU,QAGNE,EAAQhC,IAAMC,YAAW,WAAWnB,GAAS,IAAjBxE,EAAgB,EAAhBA,KAChC,OAAO,oBAAIwE,IAAKA,EAAT,SAAexE,OAGlB2H,EAAUjC,IAAMC,YAAW,WAAWnB,GAAS,IAAjBxE,EAAgB,EAAhBA,KAClC,OAAO,oBAAIwE,IAAKA,EAAT,SAAexE,OAGT,SAAS4H,EAAT,GAAoD,EAAhCpF,GAAiC,IAA7BE,EAA4B,EAA5BA,KAAMmD,EAAsB,EAAtBA,MAAOgC,EAAe,EAAfA,YAClD,EAA4C1E,oBAAS,GAArD,mBAAO2E,EAAP,KAAuBC,EAAvB,KACA,EAAkC5E,mBAAST,EAAK1C,MAAhD,mBAAOgG,EAAP,KAAkBC,EAAlB,KACA,EAA0C9C,qBAA1C,mBACA,GADA,UACsCA,mBAAST,EAAK1C,OAApD,mBAEIgI,GAFJ,UAEkB5D,oBAGZ6D,GAFY7D,mBACEA,mBACJA,oBAQhBC,qBAAU,WAER,OAAQ3B,EAAKH,MACX,IAAK,OACHyF,EAAY1D,QAAU6B,IAAYC,gBAClC,MACF,IAAK,UAGL,IAAK,QACH4B,EAAY1D,QAAU6B,IAAYE,eAGtC6B,IACAC,MACC,IAEH9D,qBAAU,cAAU,CAAC2B,IAErB,IAAMmC,EAAc,WAElB,OAAQzF,EAAKH,MACX,IAAK,UACH,OAAO,cAACoF,EAAD,CAASnD,IAAKyD,EAASjI,KAAMgG,IAEtC,IAAK,OACH,OAAO,cAACuB,EAAD,CAAM/C,IAAKyD,EAASjI,KAAMgG,IAEnC,IAAK,QACH,OAAO,cAAC0B,EAAD,CAAOlD,IAAKyD,EAASjI,KAAMgG,MAgBlCoC,EAAW,uCAAG,sBAAA9H,EAAA,sDAClByH,GAAkB,QAEMM,IAApBJ,EAAQ3D,UACV2D,EAAQ3D,QAAQzE,UAAYsG,IAAYmC,QAJxB,2CAAH,qDASXJ,EAAgB,aAItB,OACE,mCACIJ,EAKA,cAACrC,EAAD,CACEI,MAtEa,WACnBA,EAAMnD,EAAKC,SAsELJ,KAAMG,EAAKH,KACXvC,KAAMgG,EACNJ,QAAS,WACPmC,GAAkB,IAEpB9D,OAAQ,SAACjE,GAtCE,IAACuI,EAClBtC,EADkBsC,EAuCCvI,GArCnBoB,EAAa2B,WAAWL,EAAKb,MAAOa,EAAKC,OAAQ4F,EAAa7F,EAAKH,MACjD,UAAdG,EAAKH,MACPsF,EAAYU,MAuBV,qBAAKhF,QAAS6E,EAAavI,UAAWsG,IAAYpG,UAAlD,SACGoI,Q,sCCvPI,SAASK,EAAT,GAAsC,IAAZjF,EAAW,EAAXA,QACvC,OACE,qBACEA,QAAS,SAACE,GACRA,EAAEgF,kBACavB,OAAOC,QACpB,8CAGA5D,KAGJ1D,UAAW6I,IAAY3I,UAVzB,SAYE,mBAAGF,UAAW6I,IAAYC,KAA1B,0BCbS,SAASC,EAAT,GAAmC,IAAV/C,EAAS,EAATA,MACtC,EAA4B1C,oBAAS,GAArC,mBAAO0F,EAAP,KAAeC,EAAf,KACA,OACE,qCACGD,GAAU,cAACL,EAAD,CAAgBjF,QAASsC,IACpC,sBACEtC,QAAS,SAACE,GACRA,EAAEgF,kBAEAK,GADED,IAQNhJ,UAAWkJ,IAAahJ,UAX1B,UAaE,qBAAKF,UAAS,UAAKkJ,IAAaC,KAAlB,YAA0BD,IAAaE,MAArD,eACA,qBAAKpJ,UAAS,UAAKkJ,IAAaG,KAAlB,YAA0BH,IAAaE,MAArD,eACA,qBAAKpJ,UAAS,UAAKkJ,IAAaI,KAAlB,YAA0BJ,IAAaE,MAArD,qB,UCROG,EARE1D,IAAMC,YAAW,SAAC0D,EAAO7E,GACxC,OACE,mBAAGA,IAAKA,EAAK3E,UAAWwJ,EAAMxJ,UAA9B,SACGwJ,EAAMC,cCAE,SAASC,EAAT,GAA0C,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,UACzC,EAAkCtG,mBAAS,GAAD,OAAIuG,IAAWC,aAAzD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4B1G,oBAAS,GAArC,mBAAO0F,EAAP,KAAeC,EAAf,KACA,EAAgC3F,mBAASqG,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KA8DMC,EAAa,SAACC,GAGlB7I,EAAawB,QAAQ4G,EAAQ3H,MAAOoI,GACpC,IAAMC,EAAkBJ,EAAShI,MAAMO,QAAO,SAACK,GAC7C,OAAIA,EAAKC,SAAWsH,OAClB,EAEOvH,KAIXqH,GAAY,SAACI,GAAD,mBAAC,eACRA,GADO,IAEVrI,MAAOoI,QASLE,EAAWhG,mBAkBjB,OACE,sBACEb,QAnGgB,WAEdsF,IACJgB,EAAa,GAAD,OAAIH,IAAWC,WAAf,YAA6BD,IAAWW,iBACpDvB,GAAU,KAgGRwB,aAnBY,WACTzB,IACHuB,EAAS9F,QAAQsF,UAAjB,UAAgCF,IAAWa,WAA3C,YAAyDb,IAAW/H,SAkBpE6I,aAfkB,WACf3B,IACHuB,EAAS9F,QAAQsF,UAAjB,UAAgCF,IAAW/H,SAc3C9B,UAAW+J,EAJb,WAMIf,GACA,qCACE,cAACD,EAAD,CACE/C,MAAO,WACL4D,EAAUK,EAASjI,UAGvB,cAAC,EAAD,CAAU2C,IAAK4F,EAAUvK,UAAW6J,IAAW/H,MAA/C,SACGmI,EAASnI,WAIfkH,GACC,qCACE,wBAAQhJ,UAAW6J,IAAWe,YAAalH,QA9GhC,WACbsF,IACFgB,EAAa,GAAD,OAAIH,IAAWC,WAAf,MACZb,GAAU,KA2GN,mBAGA,cAAClB,EAAD,CAEE8C,YAAY,QACZhI,KAAM,CACJH,KAAM,QACNvC,KAAM8J,EAASnI,MACfE,MAAOiI,EAASjI,MAChBc,OAAQ,SAEVkF,YAxDU,SAAC8C,GACnBZ,GAAY,SAACa,GACX,OAAO,2BAAKA,GAAZ,IAAuBjJ,MAAOgJ,SA8CpB,SAWN,sBAAK9K,UAAW6J,IAAWmB,iBAA3B,UAlGgB,WACtB,IAAI/I,EAAQ,GAiBZ,OAhBIgI,EAAShI,QACXA,EAAQgI,EAAShI,MAAME,KAAI,SAACU,GAC1B,OACE,cAACkF,EAAD,CAEElF,KAAM,CACJH,KAAMG,EAAKH,KACXvC,KAAM0C,EAAK1C,KACX6B,MAAOiI,EAASjI,MAChBc,OAAQD,EAAKC,QAEfkD,MAAOmE,GAPFtH,EAAKC,YAYXb,EAiFEgJ,GACAjC,GACC,cAAC/D,EAAD,CAAiB7C,IAAK6H,EAASjI,MAAOoC,OAzH/B,SAAC8G,GAClB,IAAMC,EAAQ5J,EAAakB,QACzByI,EAAQxI,KACRwI,EAAQ/K,KACRwJ,EAAQ3H,OAGJqI,EAAkBJ,EAAShI,MACjCoI,EAAgBhI,KAAK,CACnBS,OAAQqI,EACRzI,KAAMwI,EAAQxI,KACdvC,KAAM+K,EAAQ/K,OAEhB+J,GAAY,SAACI,GAAD,mBAAC,eACRA,GADO,IAEVrI,MAAOoI,mB,qBC/CE,SAASe,GAAT,GAA8B,IAAZ1H,EAAW,EAAXA,QAC/B,OACE,qBAAK1D,UAAWC,IAAImC,IAAKsB,QAASA,EAAlC,SACE,sBAAK1D,UAAWC,IAAIoL,KAApB,UACE,qBAAKrL,UAAWC,IAAIqL,eACpB,qBAAKtL,UAAWC,IAAIsL,sB,wBCLb,SAASC,GAAT,GAAkC,IAAZ9H,EAAW,EAAXA,QACnC,OACE,qBAAKA,QAASA,EAAS1D,UAAWC,KAAI+E,IAAtC,yBCMW,SAASyG,GAAT,GAAoC,eAEjD,MAAoCnI,mBAAS,IAA7C,mBAAOoI,EAAP,KAAmBC,EAAnB,KACA,EAAsDrI,mBAAS,IAA/D,mBAAOsI,EAAP,KAA4BC,EAA5B,KACA,EAAkDvI,oBAAS,GAA3D,mBAAOwI,EAAP,KAA0BC,EAA1B,KACqBxH,kBAAO,GAE5BC,qBAAU,WACRwH,MACC,IAEHxH,qBAAU,WACRyH,MACC,CAACP,IAEJ,IAYMO,EAAgB,WACpB,IAAIC,EAAkB,GACH,OAAfR,IAMFQ,EALmBR,EAAWvJ,KAAI,SAACC,EAAKzB,GACtC,OACE,cAAC+I,EAAD,CAAyBC,QAASvH,EAAKwH,UAAWuC,GAApC/J,EAAIJ,WAQxB6J,EAAuBK,IAOnBE,EAAkB,WACtBL,GAAqB,IAGjBC,EAAkB,WACtB,IAAMK,EAAQ9K,EAAaG,gBAC3BiK,EAAcU,GACdJ,KASIE,EAAkB,SAACG,GAEvB,IAAMC,EAAehL,EAAae,OAAOgK,GACzCX,EAAcY,GACdN,KAGF,OACE,qCACE,cAACT,GAAD,CAAY9H,QAzDS,WACN2D,OAAOC,QACtB,iGAGA/F,EAAaC,WACbwK,IACA3E,OAAOmF,SAASC,aAmDhB,sBAAKzM,UAAW0M,IAAyBxM,UAAzC,UAEE,cAACkL,GAAD,CAAQ1H,QAhCmB,WAC/BqI,GAAqB,MAgChBD,GACC,cAAC3I,EAAD,CACEC,YAAagJ,EACb/I,SAAU,WACR2I,IACAI,OAKLR,QC7FM,SAASe,KACtB,OACE,qCACE,cAAC5M,EAAD,IACA,cAAC0L,GAAD,OCQSmB,OAZf,WACE,OACE,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,UAAWF,YCJ5BG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.70d7bc77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoteText_container__2fAPC\",\"editingTextarea\":\"NoteText_editingTextarea__q_HhU\",\"editingHeading\":\"NoteText_editingHeading__3TXNZ\",\"btnContainer\":\"NoteText_btnContainer__2WEjJ\",\"btn\":\"NoteText_btn__UhAqr\",\"gradient\":\"NoteText_gradient__3mhvD\",\"del\":\"NoteText_del__Qq9Tn\",\"save\":\"NoteText_save__3I7jA\",\"close\":\"NoteText_close__28CNR\",\"pTagContainer\":\"NoteText_pTagContainer__1870p\",\"pTag\":\"NoteText_pTag__1caG2\",\"headingTag\":\"NoteText_headingTag__QTncV\",\"hidden\":\"NoteText_hidden__151ib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"storageBox\":\"BoxItem_storageBox__2nDMK\",\"storageBoxOpen\":\"BoxItem_storageBoxOpen__itgPJ\",\"contentContainer\":\"BoxItem_contentContainer__kWkfB\",\"title\":\"BoxItem_title__niZVl\",\"titleHover\":\"BoxItem_titleHover__v7HxM\",\"closeBoxBtn\":\"BoxItem_closeBoxBtn__3BuK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContentSelector_container__3mTmJ\",\"btnContainer\":\"ContentSelector_btnContainer__2ui2G\",\"btn\":\"ContentSelector_btn__2ahxr\",\"btnActive\":\"ContentSelector_btnActive__2viqs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ThreeDotsMenu_container__VjbDk\",\"dots\":\"ThreeDotsMenu_dots__E8gLW\",\"dot1\":\"ThreeDotsMenu_dot1__2VYl5\",\"dot2\":\"ThreeDotsMenu_dot2__3iCcM\",\"dot3\":\"ThreeDotsMenu_dot3__25qQs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"NewBoxPopUp_screen__68joZ\",\"container\":\"NewBoxPopUp_container__3hB5T\",\"popupExit\":\"NewBoxPopUp_popupExit__34HEn\",\"createBtn\":\"NewBoxPopUp_createBtn__1lpMA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"addText_container__3jLZ7\",\"btn\":\"addText_btn__1t9By\",\"text\":\"addText_text__2wJm5\",\"heading\":\"addText_heading__LvQdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"AddBox_box__2DH3j\",\"plus\":\"AddBox_plus__sxaRU\",\"verticalLine\":\"AddBox_verticalLine__3R5ff\",\"horizontalLine\":\"AddBox_horizontalLine__BfDjc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WelcomeHeader_container__23eFS\",\"gradient\":\"WelcomeHeader_gradient__3mqsG\",\"text\":\"WelcomeHeader_text__3sfyN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DeleteBoxPopUp_container__-_YwP\",\"item\":\"DeleteBoxPopUp_item__1Qc74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StorageBoxesContainer_container__3VILU\",\"btn\":\"StorageBoxesContainer_btn__2qPAj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"RenderDemo_btn__2NMZ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BoxTitle_title__XS79f\"};","import React from \"react\";\r\nimport CSS from \"./WelcomeHeader.module.css\";\r\n\r\nexport default function WelcomeHeader() {\r\n  return (\r\n    <div className={CSS.container}>\r\n      <h1 className={CSS.text}>Jot Freely</h1>\r\n    </div>\r\n  );\r\n}\r\n","export function returnUniqueNum(arrayOfIds) {\r\n  //Argument take a max range and an array\r\n  let range = arrayOfIds.length;\r\n  if (range === 0) {\r\n    return 0;\r\n  }\r\n  //Sort the array\r\n  arrayOfIds.sort(function (a, b) {\r\n    return a - b;\r\n  });\r\n\r\n  try {\r\n    for (let i = 0; i < range; i++) {\r\n      //The first in check Num\r\n      const startNum = arrayOfIds[i] + 1;\r\n      if (arrayOfIds[0] === 1) {\r\n        return 0;\r\n      }\r\n      //The num we are checking against\r\n      const nextNum = arrayOfIds[i + 1];\r\n      if (startNum !== nextNum) {\r\n        return startNum;\r\n      }\r\n    }\r\n  } catch (error) {}\r\n}","import { returnUniqueNum } from \"./dbFunctions\";\r\nimport information from \"../Information.json\";\r\n\r\nconst note = \"\";\r\nconst updatedText = \"\";\r\n\r\nconst getLocal = () => {\r\n  return JSON.parse(localStorage.getItem(\"StorageBoxes\"));\r\n};\r\nconst setLocal = (parsedArray) => {\r\n  localStorage.setItem(\"StorageBoxes\", JSON.stringify(parsedArray));\r\n};\r\nconst getIds = () => {\r\n  const StorageBoxes = getLocal();\r\n  return StorageBoxes.map((box) => {\r\n    return box.boxId;\r\n  });\r\n};\r\n\r\nconst storageFunct = {\r\n  initDemo: function () {\r\n    setLocal(information);\r\n  },\r\n  getAllStorage: function () {\r\n    return JSON.parse(localStorage.getItem(\"StorageBoxes\"));\r\n  },\r\n  removeAllStorage: function () {\r\n    localStorage.removeItem(\"StorageBoxes\");\r\n  },\r\n  addBox: function (title) {\r\n    // const informationString = localStorage.getItem(\"StorageBoxes\");\r\n    const StorageBoxes = getLocal();\r\n\r\n    //Gets the id of last item stored in local Storage -- Temporary --\r\n    //If localStorage empty\r\n    if (StorageBoxes === null) {\r\n      const newID = 0;\r\n      const newArray = [{ boxId: newID, title: title, notes: [] }];\r\n      setLocal(newArray);\r\n      // localStorage.setItem(\"StorageBoxes\", JSON.stringify(newArray));\r\n    } else {\r\n      //Else local storage exists\r\n      const idArray = getIds();\r\n      const newID = returnUniqueNum(idArray);\r\n      //New Box/List Item\r\n      const newBox = { boxId: newID, title: title, notes: [] };\r\n\r\n      StorageBoxes.push(newBox);\r\n      //Send back to localStorage\r\n      setLocal(StorageBoxes);\r\n      // localStorage.setItem(\"StorageBoxes\", JSON.stringify(StorageBoxes));\r\n    }\r\n  },\r\n  delBox: function (boxId) {\r\n    const StorageBoxes = getLocal();\r\n    //Filter Box\r\n    const updatedStorageBoxes = StorageBoxes.filter((box) => {\r\n      if (box.boxId === boxId) {\r\n        return;\r\n      } else {\r\n        return box;\r\n      }\r\n    });\r\n    setLocal(updatedStorageBoxes);\r\n    return updatedStorageBoxes;\r\n  },\r\n\r\n  addNote: function (type, text, boxId) {\r\n    //type of note\r\n    let id = 0;\r\n    // contents of the note\r\n    // what box to add it to\r\n    //store type and text in a object thats going to be sent to the dom and the DB\r\n\r\n    // (\"file\", boxId);\r\n    const storageBoxes = getLocal();\r\n    // (storageBoxes);\r\n    //Loop through boxes to find box we are looking for\r\n    const updatedStorageBoxes = storageBoxes.map((box) => {\r\n      if (boxId === box.boxId) {\r\n        //then loop through notes and build an array of ids\r\n        const noteIds = box.notes.map((note) => {\r\n          return note.noteId;\r\n        });\r\n        id = returnUniqueNum(noteIds);\r\n        box.notes.push({ noteId: id, type: type, text: text });\r\n        return box;\r\n      } else {\r\n        return box;\r\n      }\r\n    });\r\n    setLocal(updatedStorageBoxes);\r\n    //Return Unique num\r\n    return id;\r\n  },\r\n  delNote: function (boxId, noteId) {\r\n    const storageBoxes = JSON.parse(localStorage.getItem(\"StorageBoxes\"));\r\n\r\n    //Finds the note we are looking for then checks what note.type we are adding\r\n    const updatedArray = storageBoxes.map((box) => {\r\n      //If the current box we are in matches the current box in loop\r\n\r\n      if (box.boxId === boxId) {\r\n        //If its the title element\r\n        const updatedNotes = box.notes.filter((note) => {\r\n          if (note.noteId === noteId) {\r\n            return;\r\n          } else {\r\n            return note;\r\n          }\r\n        });\r\n        box.notes = updatedNotes;\r\n        //Build Id of notes\r\n      }\r\n      return box;\r\n    });\r\n\r\n    setLocal(updatedArray);\r\n  },\r\n  updateNote: function (boxId, noteId, text, type) {\r\n    const storageBoxes = getLocal();\r\n    //Finds the note we are looking for then checks what note.type we are adding\r\n    const updatedArray = storageBoxes.map((box) => {\r\n      //If the current box we are in matches the current box in loop\r\n      if (boxId === box.boxId) {\r\n        //If its the title element\r\n        if (type === \"title\") {\r\n          //change title to what was edited\r\n          box.title = text;\r\n          //return box to the array\r\n          return box;\r\n        } else {\r\n          const updatedNotes = box.notes.map((note) => {\r\n            if (note.noteId === noteId) {\r\n              note.text = text;\r\n              return note;\r\n            } else {\r\n              return note;\r\n            }\r\n          });\r\n          box.notes = updatedNotes;\r\n        }\r\n        //Build Id of notes\r\n      }\r\n      return box;\r\n    });\r\n    setLocal(updatedArray);\r\n  },\r\n};\r\n\r\nexport default storageFunct;\r\n","import React, { useState } from \"react\";\r\nimport CSS from \"./NewBoxPopUp.module.css\";\r\nimport storageFunct from \"../../utils/localStorageFunct\";\r\n\r\nexport default function NewBoxPopUp({ onExitPopUp, onCreate }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  //Update State\r\n  const handledChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    setTitle(value);\r\n  };\r\n\r\n  const addToDB = () => {\r\n    storageFunct.addBox(title);\r\n    onCreate();\r\n  };\r\n\r\n  return (\r\n    <div className={CSS.screen}>\r\n      <div className={CSS.container}>\r\n        <button className={CSS.popupExit} onClick={onExitPopUp}>\r\n          X\r\n        </button>\r\n        <input\r\n          onChange={(e) => {\r\n            handledChange(e);\r\n          }}\r\n          placeholder=\"Title\"\r\n        ></input>\r\n        <button\r\n          className={CSS.createBtn}\r\n          onClick={addToDB}\r\n        >\r\n          <p>Create New Box</p>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport CSS from \"./addText.module.css\";\r\nimport storageFunct from \"../../utils/localStorageFunct\";\r\n\r\n//On save You have to send to content selector which then sends to box Item\r\n\r\nexport default function AddText({ id, onSave, type, closeBtn }) {\r\n  const textAreaRef = useRef();\r\n\r\n  useEffect(() => {\r\n    //Init Header or Text for note box\r\n    switch (type) {\r\n      case \"text\":\r\n        textAreaRef.current.className = CSS.text;\r\n        break;\r\n      case \"heading\" || \"title\":\r\n        textAreaRef.current.className = CSS.heading;\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  //Take text area and add to contents array\r\n\r\n  //Click\r\n  const handleClick = () => {\r\n    onSave({ type: type, text: textAreaRef.current.innerText });\r\n    textAreaRef.current.textContent = \"\";\r\n  };\r\n  return (\r\n    <div className={CSS.container}>\r\n      <div\r\n        ref={textAreaRef}\r\n        contentEditable={true}\r\n        suppressContentEditableWarning={true}\r\n      ></div>\r\n      <button onClick={handleClick} className={CSS.btn}>\r\n        Save\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport CSS from \"./ContentSelector.module.css\";\r\nimport AddText from \"../AddText\";\r\n\r\nexport default function ContentSelector({ box, onSave }) {\r\n  const [textareaActive, setTextareaActive] = useState(false);\r\n  const [onSelected, setOnSelected] = useState(\"text\");\r\n  const header = useRef();\r\n  const text = useRef();\r\n\r\n  const addText = async () => {\r\n    text.current.className = CSS.btnActive;\r\n    header.current.className = CSS.btn;\r\n    setOnSelected(\"text\");\r\n    await setTextareaActive(false);\r\n    await setTextareaActive(true);\r\n  };\r\n\r\n  const addHeader = async () => {\r\n    header.current.className = CSS.btnActive;\r\n    text.current.className = CSS.btn;\r\n    setOnSelected(\"heading\");\r\n    await setTextareaActive(false);\r\n    await setTextareaActive(true);\r\n  };\r\n\r\n  const cancel = () => {\r\n    text.current.className = CSS.btn;\r\n    header.current.className = CSS.btn;\r\n    setTextareaActive(false);\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className={CSS.container}>\r\n      <div className={CSS.btnContainer}>\r\n        <p ref={header} onMouseDown={addHeader} className={CSS.btn}>\r\n          Header\r\n        </p>\r\n        <p ref={text} onMouseDown={addText} className={CSS.btn}>\r\n          Text\r\n        </p>\r\n        <p onMouseDown={cancel} className={CSS.btn}>\r\n          Cancel\r\n        </p>\r\n      </div>\r\n      {textareaActive && (\r\n        <AddText boxId={box} type={onSelected} onSave={onSave} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport NoteTextCSS from \"./NoteText.module.css\";\r\nimport storageFunct from \"../../utils/localStorageFunct\";\r\n\r\n//First note is rendered\r\n//The editor takes the height from the init note\r\n//Whenever the text state is changed change the displayed items\r\n//also when text state is changed apply height\r\n\r\nconst Editor = React.forwardRef(\r\n  ({ text, type, onClose, onSave, onDel }, ref) => {\r\n    const [editorState, setEditorState] = useState();\r\n    const [textState, setTextState] = useState(text);\r\n    const textareaRef = useRef();\r\n    useEffect(() => {\r\n      switch (type) {\r\n        case \"text\":\r\n          textareaRef.current.className = NoteTextCSS.editingTextarea;\r\n          break;\r\n        case \"heading\":\r\n          textareaRef.current.className = NoteTextCSS.editingHeading;\r\n          break;\r\n        case \"title\":\r\n          textareaRef.current.className = NoteTextCSS.editingHeading;\r\n          break;\r\n      }\r\n      buildEditorTxt();\r\n    }, []);\r\n    const innerHtmlFormatter = (htmlString) => {\r\n      //Replace every /p wiith except the last one\r\n      const noDiv = htmlString.replaceAll(\"<div>\", \"\");\r\n      const noDivSlash = noDiv.replaceAll(\"</div>\", \"\");\r\n      const noI = noDivSlash.replaceAll(\"<i>\", \"\");\r\n      const noISlash = noI.replaceAll(\"</i>\", \"\");\r\n      const noB = noISlash.replaceAll(\"<b>\", \"\");\r\n      const noBSlash = noB.replaceAll(\"</b>\", \"\");\r\n      const noU = noBSlash.replaceAll(\"<u>\", \"\");\r\n      const noUSlash = noU.replaceAll(\"</u>\", \"\");\r\n      const noP = noUSlash.replaceAll(\"<p>\", \"\");\r\n      const noSpanSplit = noP.split(/<span.*?>/);\r\n      const noSpanJoin = noSpanSplit.join(\"\");\r\n      const noSpanSlash = noSpanJoin.replaceAll(\"</span>\", \"\");\r\n      const noPSlash = noSpanSlash.replaceAll(\"</p>\", \"\\n\");\r\n      const changeSpace = noPSlash.replaceAll(\"&nbsp;\", \" \");\r\n      const changeAmp = changeSpace.replaceAll(\"&amp;\", \"&\");\r\n      const changeLT = changeAmp.replaceAll(\"&lt;\", \"<\");\r\n      const changeGT = changeLT.replaceAll(\"&gt;\", \">\");\r\n      const changeBr = changeGT.replaceAll(\"<br>\", \"\\n\");\r\n      const StrArr = changeBr.split(/(\\n)/);\r\n\r\n      StrArr.pop();\r\n      StrArr.pop();\r\n      // (StrArr);\r\n      const finalStr = StrArr.join(\"\");\r\n      return finalStr;\r\n    };\r\n\r\n    //Formats the editable p tag so it matches the acutal p tags\r\n    const buildEditorTxt = () => {\r\n      let array = textState.split(\"\\n\");\r\n      const elementLayout = array.map((element, i) => {\r\n        if (element === \"\") {\r\n          return <br key={i} />;\r\n        }\r\n\r\n        // const iSplitEl = bSplitEl.split(/(<i>.*?<\\/i>)/);\r\n        // (\"newEl\", iSplitEl);\r\n        return <p key={i}>{element}</p>;\r\n      });\r\n\r\n      //Render ediitor in divs so that you can edit it easier also let it account for \\n / multips \\ns\r\n      setEditorState(<div>{elementLayout}</div>);\r\n    };\r\n    return (\r\n      <div className={NoteTextCSS.container}>\r\n        <div ref={ref}>\r\n          <p>Editing</p>\r\n          <div\r\n            ref={textareaRef}\r\n            contentEditable={true}\r\n            suppressContentEditableWarning={true}\r\n          >\r\n            {editorState}\r\n          </div>\r\n          <br />\r\n          <div className={NoteTextCSS.btnContainer}>\r\n            <button\r\n              className={`${NoteTextCSS.btn} ${NoteTextCSS.close}`}\r\n              onMouseDown={(e) => {\r\n                const edited = innerHtmlFormatter(\r\n                  textareaRef.current.innerHTML\r\n                );\r\n                if (edited !== textState) {\r\n                  //If input is changed\r\n                  let answer = window.confirm(\r\n                    \"You didnt save would you still like to close?\"\r\n                  );\r\n                  if (answer) {\r\n                    //If they dont wanna save lose the changes and close\r\n                    onClose();\r\n                  }\r\n                } else {\r\n                  onClose();\r\n                }\r\n              }}\r\n            >\r\n              Close Editor\r\n            </button>\r\n            <button\r\n              className={`${NoteTextCSS.btn} ${NoteTextCSS.save}`}\r\n              onMouseDown={(e) => {\r\n                const edited = innerHtmlFormatter(\r\n                  textareaRef.current.innerHTML\r\n                );\r\n                setTextState(edited);\r\n                onSave(edited);\r\n              }}\r\n            >\r\n              Save\r\n            </button>\r\n            {type !== \"title\" && (\r\n              <button\r\n                onClick={() => {\r\n                  onDel();\r\n                }}\r\n                className={`${NoteTextCSS.btn} ${NoteTextCSS.del}`}\r\n              >\r\n                Delete\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nconst Text = React.forwardRef(({ text }, ref) => {\r\n  // (text)\r\n  const pTag = () => {\r\n    let array = text.split(\"\\n\");\r\n    const elementLayout = array.map((element, i) => {\r\n      if (element === \"\") {\r\n        return <br key={i} />;\r\n      }\r\n      return (\r\n        <p className={NoteTextCSS.pTag} key={i}>\r\n          {element}\r\n        </p>\r\n      );\r\n    });\r\n    // (elementLayout);\r\n    return (\r\n      <div ref={ref} className={NoteTextCSS.pTagContainer}>\r\n        {elementLayout}\r\n      </div>\r\n    );\r\n    // return <p className={NoteTextCSS.text}> {textState}</p>;\r\n  };\r\n\r\n  return <>{pTag()}</>;\r\n});\r\n\r\nconst Title = React.forwardRef(({ text }, ref) => {\r\n  return <h1 ref={ref}>{text}</h1>;\r\n});\r\n\r\nconst Heading = React.forwardRef(({ text }, ref) => {\r\n  return <h2 ref={ref}>{text}</h2>;\r\n});\r\n\r\nexport default function NoteText({ id, note, onDel, updateTitle }) {\r\n  const [isEditingState, setIsEditingState] = useState(false);\r\n  const [textState, setTextState] = useState(note.text);\r\n  const [editorElement, setEditorElement] = useState();\r\n  const [editingText, setEditingText] = useState(note.text);\r\n  // const [editorHeight, setEditorHeight] = useState();\r\n  let editorClass = useRef();\r\n  const editorRef = useRef();\r\n  const textAreaRef = useRef();\r\n  const noteRef = useRef();\r\n\r\n  //We need to export height of the component T H T  after each save and set it the height of the editor ref also do that on init\r\n\r\n  const handleDelete = () => {\r\n    onDel(note.noteId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Init Header or Text for note box\r\n    switch (note.type) {\r\n      case \"text\":\r\n        editorClass.current = NoteTextCSS.editingTextarea;\r\n        break;\r\n      case \"heading\":\r\n        editorClass.current = NoteTextCSS.editingHeading;\r\n        break;\r\n      case \"title\":\r\n        editorClass.current = NoteTextCSS.editingHeading;\r\n        break;\r\n    }\r\n    getCompHeight();\r\n    noteChecker();\r\n  }, []);\r\n\r\n  useEffect(() => {}, [textState]);\r\n\r\n  const noteChecker = () => {\r\n    //switch statement would work better i think\r\n    switch (note.type) {\r\n      case \"heading\":\r\n        return <Heading ref={noteRef} text={textState} />;\r\n\r\n      case \"text\":\r\n        return <Text ref={noteRef} text={textState} />;\r\n\r\n      case \"title\":\r\n        return <Title ref={noteRef} text={textState} />;\r\n    }\r\n  };\r\n\r\n  //\r\n  const handleSave = (updatedText) => {\r\n    setTextState(updatedText);\r\n    storageFunct.updateNote(note.boxId, note.noteId, updatedText, note.type);\r\n    if (note.type === \"title\") {\r\n      updateTitle(updatedText);\r\n    }\r\n    //Get INformation from db\r\n    // setElementState(<p>{updatedText}</p>);\r\n  };\r\n\r\n  // Handle Item Click For Editing a box\r\n  const handleClick = async () => {\r\n    setIsEditingState(true);\r\n    // editorRef.current.classList = \"\";\r\n    if (noteRef.current !== undefined) {\r\n      noteRef.current.className = NoteTextCSS.hidden;\r\n    }\r\n  };\r\n  //Get the rendered component height so we can send that to size the editor which will then grow accoding to input\r\n  //The textarea work around bc it doesnt grow to size\r\n  const getCompHeight = () => {\r\n    // textAreaRef.current.style.minHeight = `${noteRef.current.clientHeight}px`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isEditingState ? (\r\n        <div onClick={handleClick} className={NoteTextCSS.container}>\r\n          {noteChecker()}\r\n        </div>\r\n      ) : (\r\n        <Editor\r\n          onDel={handleDelete}\r\n          type={note.type}\r\n          text={textState}\r\n          onClose={() => {\r\n            setIsEditingState(false);\r\n          }}\r\n          onSave={(text) => {\r\n            handleSave(text);\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DelPopUpCSS from \"./DeleteBoxPopUp.module.css\";\r\n\r\nexport default function DeleteBoxPopUp({ onClick }) {\r\n  return (\r\n    <div\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        let verified = window.confirm(\r\n          \"Are you sure you want to delete this Box?\"\r\n        );\r\n        if (verified) {\r\n          onClick();\r\n        }\r\n      }}\r\n      className={DelPopUpCSS.container}\r\n    >\r\n      <p className={DelPopUpCSS.item}>Delete Box</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ThreeDotsCSS from \"../ThreeDotsMenu/ThreeDotsMenu.module.css\";\r\nimport DeleteBoxPopUp from \"../DeleteBoxPopUp\";\r\n\r\nexport default function ThreeDotsMenu({ onDel }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  return (\r\n    <>\r\n      {isOpen && <DeleteBoxPopUp onClick={onDel} />}\r\n      <div\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          if (isOpen) {\r\n            setIsOpen(false);\r\n          } else {\r\n            setIsOpen(true);\r\n          }\r\n\r\n          // onClick();\r\n        }}\r\n        className={ThreeDotsCSS.container}\r\n      >\r\n        <div className={`${ThreeDotsCSS.dot1} ${ThreeDotsCSS.dots}`}>.</div>\r\n        <div className={`${ThreeDotsCSS.dot2} ${ThreeDotsCSS.dots}`}>.</div>\r\n        <div className={`${ThreeDotsCSS.dot3} ${ThreeDotsCSS.dots}`}>.</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport BoxTitleCSS from \"./BoxTitle.module.css\";\r\n\r\n// export default function BoxTitle({ children, ref }) {\r\n\r\n//   return <p className={BoxTitleCSS.title}>{children}</p>;\r\n// }\r\n\r\nconst BoxTitle = React.forwardRef((props, ref) => {\r\n  return (\r\n    <p ref={ref} className={props.className}>\r\n      {props.children}\r\n    </p>\r\n  );\r\n});\r\n\r\nexport default BoxTitle;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport BoxItemCSS from \"../BoxItem/BoxItem.module.css\";\r\nimport ContentSelector from \"../ContentSelector\";\r\nimport AddText from \"../AddText\";\r\nimport NoteText from \"../NoteText\";\r\nimport ThreeDotsMenu from \"../ThreeDotsMenu\";\r\nimport BoxTitle from \"../BoxTitle\";\r\nimport storageFunct from \"../../utils/localStorageFunct\";\r\n\r\n// Single Stored Box that contains a collection of\r\n//info consists of the Text Headings and Title of each Box Stored\r\nexport default function BoxItem({ content, deleteBox }) {\r\n  const [classList, setClassList] = useState(`${BoxItemCSS.storageBox}`);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [boxState, setBoxState] = useState(content);\r\n\r\n  // useEffect(() => {\r\n  //   noteTextBuilder();\r\n  // }, []);\r\n  //Handles Open for Box clicked\r\n  const handleClick = () => {\r\n    //If box is closed Open It\r\n    if (isOpen) return;\r\n    setClassList(`${BoxItemCSS.storageBox} ${BoxItemCSS.storageBoxOpen}`);\r\n    setIsOpen(true);\r\n    //If box is able to be opened and is open\r\n  };\r\n\r\n  const handleExit = () => {\r\n    if (isOpen) {\r\n      setClassList(`${BoxItemCSS.storageBox} `);\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleSave = (newNote) => {\r\n    const newId = storageFunct.addNote(\r\n      newNote.type,\r\n      newNote.text,\r\n      content.boxId\r\n    );\r\n\r\n    const newContentArray = boxState.notes;\r\n    newContentArray.push({\r\n      noteId: newId,\r\n      type: newNote.type,\r\n      text: newNote.text,\r\n    });\r\n    setBoxState((state) => ({\r\n      ...state,\r\n      notes: newContentArray,\r\n    }));\r\n  };\r\n\r\n  //\r\n  const noteTextBuilder = () => {\r\n    let notes = [];\r\n    if (boxState.notes) {\r\n      notes = boxState.notes.map((note) => {\r\n        return (\r\n          <NoteText\r\n            key={note.noteId}\r\n            note={{\r\n              type: note.type,\r\n              text: note.text,\r\n              boxId: boxState.boxId,\r\n              noteId: note.noteId,\r\n            }}\r\n            onDel={deleteNote}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    return notes;\r\n  };\r\n\r\n  const deleteNote = (deleteId) => {\r\n    //When a note hits a delete button loop through content array and remove that note\r\n\r\n    storageFunct.delNote(content.boxId, deleteId);\r\n    const newContentArray = boxState.notes.filter((note) => {\r\n      if (note.noteId === deleteId) {\r\n        return;\r\n      } else {\r\n        return note;\r\n      }\r\n    });\r\n    //This updates the notes state array with new and old information\r\n    setBoxState((state) => ({\r\n      ...state,\r\n      notes: newContentArray,\r\n    }));\r\n    // setBoxState({ notes: newContentArray });\r\n  };\r\n  const updateTitle = (newTitle) => {\r\n    setBoxState((prevState) => {\r\n      return { ...prevState, title: newTitle };\r\n    });\r\n  };\r\n  const titleRef = useRef();\r\n  //User Create Box item\r\n  const onHover = () => {\r\n    if (!isOpen) {\r\n      titleRef.current.classList = `${BoxItemCSS.titleHover} ${BoxItemCSS.title}`;\r\n    }\r\n  };\r\n  const onHoverCancel = () => {\r\n    if (!isOpen) {\r\n      titleRef.current.classList = `${BoxItemCSS.title}`;\r\n    }\r\n  };\r\n\r\n  const handleSelector = (type) => {\r\n    //Get The Type from content Selector component\r\n    //Then create a note using Add Text components\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={handleClick}\r\n      onMouseEnter={onHover}\r\n      onMouseLeave={onHoverCancel}\r\n      className={classList}\r\n    >\r\n      {!isOpen && (\r\n        <>\r\n          <ThreeDotsMenu\r\n            onDel={() => {\r\n              deleteBox(boxState.boxId);\r\n            }}\r\n          />\r\n          <BoxTitle ref={titleRef} className={BoxItemCSS.title}>\r\n            {boxState.title}\r\n          </BoxTitle>\r\n        </>\r\n      )}\r\n      {isOpen && (\r\n        <>\r\n          <button className={BoxItemCSS.closeBoxBtn} onClick={handleExit}>\r\n            Close\r\n          </button>\r\n          <NoteText\r\n            key=\"title\"\r\n            contentType=\"title\"\r\n            note={{\r\n              type: \"title\",\r\n              text: boxState.title,\r\n              boxId: boxState.boxId,\r\n              noteId: \"title\",\r\n            }}\r\n            updateTitle={updateTitle}\r\n          />\r\n\r\n          <div className={BoxItemCSS.contentContainer}>\r\n            {noteTextBuilder()}\r\n            {isOpen && (\r\n              <ContentSelector box={boxState.boxId} onSave={handleSave} />\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CSS from \"./AddBox.module.css\";\r\n\r\nexport default function AddBox({ onClick }) {\r\n  return (\r\n    <div className={CSS.box} onClick={onClick}>\r\n      <div className={CSS.plus}>\r\n        <div className={CSS.verticalLine}></div>\r\n        <div className={CSS.horizontalLine}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CSS from \"./RenderDemo.module.css\";\r\n\r\nexport default function RenderDemo({ onClick }) {\r\n  return (\r\n    <div onClick={onClick} className={CSS.btn}>\r\n      Render Demo\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport NewBoxPopUp from \"../NewBoxPopUp\";\r\nimport StorageBoxesContainerCSS from \"./StorageBoxesContainer.module.css\";\r\nimport BoxItemCSS from \"../BoxItem/BoxItem.module.css\";\r\n// import TestingInitLocalStorage from \"../TestingInitLocalStorage\";\r\nimport BoxItem from \"../BoxItem\";\r\nimport information from \"../../Information.json\";\r\nimport AddBox from \"../AddBox\";\r\nimport storageFunct from \"../../utils/localStorageFunct\";\r\nimport RenderDemo from \"../RenderDemo\";\r\n\r\nexport default function StorageBoxesContainer({}) {\r\n  //Shitty Name\r\n  const [boxesState, setBoxesState] = useState([]);\r\n  const [boxesComponentState, setBoxesComponentState] = useState([]);\r\n  const [renderAddNewPopUp, setRenderAddNewPopUp] = useState(false);\r\n  const demoRendered = useRef(false);\r\n\r\n  useEffect(() => {\r\n    setStorageBoxes();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getComponents();\r\n  }, [boxesState]);\r\n\r\n  const initLocalStorage = () => {\r\n    let renderDemo = window.confirm(\r\n      \"This will delete all your notes and render the demo note. Are you sure you want to do this?\"\r\n    );\r\n    if (renderDemo) {\r\n      storageFunct.initDemo();\r\n      setStorageBoxes();\r\n      window.location.reload();\r\n    } else {\r\n    }\r\n  };\r\n\r\n  const getComponents = () => {\r\n    let ReactComponents = [];\r\n    if (boxesState !== null) {\r\n      const components = boxesState.map((box, i) => {\r\n        return (\r\n          <BoxItem key={box.boxId} content={box} deleteBox={handleBoxDelete} />\r\n        );\r\n      });\r\n      ReactComponents = components;\r\n\r\n      // setBoxesComponentState(components);\r\n    }\r\n\r\n    setBoxesComponentState(ReactComponents);\r\n  };\r\n  // const addStorageBoxToContainer\r\n  const handleAddStorageBtnClick = () => {\r\n    setRenderAddNewPopUp(true);\r\n  };\r\n\r\n  const handleExitPopUp = () => {\r\n    setRenderAddNewPopUp(false);\r\n  };\r\n  // Update Information Boxes State and local Storage\r\n  const setStorageBoxes = () => {\r\n    const array = storageFunct.getAllStorage();\r\n    setBoxesState(array);\r\n    getComponents();\r\n  };\r\n\r\n  //Clear LocalStorage\r\n  const clearLocalStorage = () => {\r\n    storageFunct.removeAllStorage();\r\n    setBoxesState([]);\r\n  };\r\n\r\n  const handleBoxDelete = (delBoxId) => {\r\n    // const storageBoxes = JSON.parse(localStorage.getItem(\"StorageBoxes\"));\r\n    const updatedBoxes = storageFunct.delBox(delBoxId);\r\n    setBoxesState(updatedBoxes);\r\n    getComponents();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <RenderDemo onClick={initLocalStorage} />\r\n      <div className={StorageBoxesContainerCSS.container}>\r\n        {/* Add Storage Box */}\r\n        <AddBox onClick={handleAddStorageBtnClick} />\r\n        {renderAddNewPopUp && (\r\n          <NewBoxPopUp\r\n            onExitPopUp={handleExitPopUp}\r\n            onCreate={() => {\r\n              setStorageBoxes();\r\n              handleExitPopUp();\r\n            }}\r\n          />\r\n        )}\r\n        {/*Displays ALl the Stored Boxes ^^^*/}\r\n        {boxesComponentState}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport WelcomeHeader from \"../../components/WelcomeHeader\";\r\nimport StorageBoxesContainer from \"../../components/StorageBoxesContainer\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <>\r\n      <WelcomeHeader />\r\n      <StorageBoxesContainer />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route component={Home} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}